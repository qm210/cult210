next:
- store Pattern, delete Pattern -- simple func, but KEEP IN MIND; WE CHANGE THE STUFF ANYWAYS (Large list of Patterns)
- persist to server
- then fix glitch in playback, if possible..??

general:
- FIX THE GLITCH if changes in notes happen at the wrong TIME [clock never stopping]
--- but first, add backend persistence to see whether this affects performance
- how to stop midi..??
--- check: https://webmidijs.org/forum/categories/support
--- go via WEB MIDI API?
-- read: https://www.html5rocks.com/en/tutorials/audio/scheduling/
--- research weird Batcher / setState warning (Recoil)

ui:
- curve function
- react-select for Track/Pattern Selector
- "new pattern" mode
- piano: each used key is slightly off colored -- for more consistent shit ;)

server:
- save changes in tracks / e.g. channels there
- persist current state to file (session_name.cult), autosave
- load current state from file (session_name.cult)

- overwrite "midi.header.name" with the corresponding track names. I don't need to know TripleOscillator...

future:
- arrange patterns in tracks
- save "versions" of patterns
- strg + click (or something) for velocity
- select rectangle of notes
- select all (strg + A)
- with selection...
 --> move as block
 --> move to other / new track
- midi in (for clock), also, get trigger?
- click in nonexisting track --> create new

TIME VIEW:
PAT1  [ | | |1||1||1|2|2| | | | | | | | ] --> channel? shift?
PAT2  [3|3|3|3||3||3|3|3|1|1| | | | | | ] --> channel? shift?

||1,3|| --> show these two in Piano Roll, when edited:
||1,3*|| --> Options {Replace 3 by 3*, save 3* as 4, reset 3* to 3}

